# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class UrlSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, payload=None, frame=None, shape=None, logo=None):  # noqa: E501
        """UrlSchema - a model defined in OpenAPI

        :param payload: The payload of this UrlSchema.  # noqa: E501
        :type payload: str
        :param frame: The frame of this UrlSchema.  # noqa: E501
        :type frame: str
        :param shape: The shape of this UrlSchema.  # noqa: E501
        :type shape: str
        :param logo: The logo of this UrlSchema.  # noqa: E501
        :type logo: str
        """
        self.openapi_types = {
            'payload': str,
            'frame': str,
            'shape': str,
            'logo': str
        }

        self.attribute_map = {
            'payload': 'payload',
            'frame': 'frame',
            'shape': 'shape',
            'logo': 'logo'
        }

        self._payload = payload
        self._frame = frame
        self._shape = shape
        self._logo = logo

    @classmethod
    def from_dict(cls, dikt) -> 'UrlSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The urlSchema of this UrlSchema.  # noqa: E501
        :rtype: UrlSchema
        """
        return util.deserialize_model(dikt, cls)

    @property
    def payload(self):
        """Gets the payload of this UrlSchema.


        :return: The payload of this UrlSchema.
        :rtype: str
        """
        return self._payload

    @payload.setter
    def payload(self, payload):
        """Sets the payload of this UrlSchema.


        :param payload: The payload of this UrlSchema.
        :type payload: str
        """
        if payload is None:
            raise ValueError("Invalid value for `payload`, must not be `None`")  # noqa: E501

        self._payload = payload

    @property
    def frame(self):
        """Gets the frame of this UrlSchema.


        :return: The frame of this UrlSchema.
        :rtype: str
        """
        return self._frame

    @frame.setter
    def frame(self, frame):
        """Sets the frame of this UrlSchema.


        :param frame: The frame of this UrlSchema.
        :type frame: str
        """

        self._frame = frame

    @property
    def shape(self):
        """Gets the shape of this UrlSchema.


        :return: The shape of this UrlSchema.
        :rtype: str
        """
        return self._shape

    @shape.setter
    def shape(self, shape):
        """Sets the shape of this UrlSchema.


        :param shape: The shape of this UrlSchema.
        :type shape: str
        """

        self._shape = shape

    @property
    def logo(self):
        """Gets the logo of this UrlSchema.


        :return: The logo of this UrlSchema.
        :rtype: str
        """
        return self._logo

    @logo.setter
    def logo(self, logo):
        """Sets the logo of this UrlSchema.


        :param logo: The logo of this UrlSchema.
        :type logo: str
        """

        self._logo = logo
