# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class SrcSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, src=None):  # noqa: E501
        """SrcSchema - a model defined in OpenAPI

        :param src: The src of this SrcSchema.  # noqa: E501
        :type src: str
        """
        self.openapi_types = {
            'src': str
        }

        self.attribute_map = {
            'src': 'src'
        }

        self._src = src

    @classmethod
    def from_dict(cls, dikt) -> 'SrcSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The srcSchema of this SrcSchema.  # noqa: E501
        :rtype: SrcSchema
        """
        return util.deserialize_model(dikt, cls)

    @property
    def src(self):
        """Gets the src of this SrcSchema.


        :return: The src of this SrcSchema.
        :rtype: str
        """
        return self._src

    @src.setter
    def src(self, src):
        """Sets the src of this SrcSchema.


        :param src: The src of this SrcSchema.
        :type src: str
        """
        if src is None:
            raise ValueError("Invalid value for `src`, must not be `None`")  # noqa: E501

        self._src = src
